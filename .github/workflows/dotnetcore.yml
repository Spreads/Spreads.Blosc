name: Build & test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types:
      - published

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:

  test_nuget:
    name: Test NuGet package on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Test
      run: dotnet test dotnet/tests/Spreads.Native.Tests.NuGet/Spreads.Native.Tests.NuGet.csproj -c Release --verbosity normal


  native_build_macos:
    name: Native build macOS
    runs-on: macos-latest
    defaults:
      run:
        working-directory: rs
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    - name: Build
      run: cargo build --release
    - name: Run tests
      run: cargo test --all --release
    - name: Upload Native Lib
      uses: actions/upload-artifact@v2
      with:
        name: libspreads_native.dylib
        path: rs/target/release/libspreads_native.dylib

  native_build_linux:
    name: Native build Linux
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: rs
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    - name: Build
      run: cargo build --release
    - name: Run tests
      run: cargo test --all --release
    - name: Upload Native Lib
      uses: actions/upload-artifact@v2
      with:
        name: libspreads_native.so
        path: rs/target/release/libspreads_native.so

  native_build_windows:
    name: Native build Windows
    runs-on: windows-latest
    defaults:
      run:
        working-directory: rs
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    - name: Build
      run: cargo build --release
    - name: Run tests
      run: cargo test --all --release
    - name: Upload Native Lib
      uses: actions/upload-artifact@v2
      with:
        name: spreads_native.dll
        path: rs/target/release/spreads_native.dll

  dotnet_build:
    name: Dotnet build Windows
    runs-on: windows-latest
    needs:
      - native_build_macos
      - native_build_linux
      - native_build_windows
    defaults:
      run:
        working-directory: dotnet

    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET Core 5
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x

    # From https://github.com/kzu/NuGetizer/blob/4c64a2bc6c31f71eeedf1820896058ed0dffaddf/.github/workflows/build.yml
    - run: dotnet tool update -g dotnet-vs
    - run: echo "::set-env name=MSB::$(vs where preview --prop=InstallationPath)"
    - run: vs install preview --quiet +Microsoft.VisualStudio.Component.ManagedDesktop.Core	+Microsoft.NetCore.Component.DevelopmentTools
      if: env.MSB == ''
    - run: echo "::add-path::$(vs where preview --prop=InstallationPath)\MSBuild\Current\Bin"
  
    # - name: Setup MSBuild
    #  uses: microsoft/setup-msbuild@v1

    - name: Download macOS Lib
      uses: actions/download-artifact@v2
      with:
        name: libspreads_native.dylib
        path: dotnet/lib/runtimes/osx-x64/native

    - name: Download Linux Lib
      uses: actions/download-artifact@v2
      with:
        name: libspreads_native.so
        path: dotnet/lib/runtimes/linux-x64/native

    - name: Download Windows Lib
      uses: actions/download-artifact@v2
      with:
        name: spreads_native.dll
        path: dotnet/lib/runtimes/win-x64/native

    - name: Delete Native Lib Artifacts
      uses: geekyeggo/delete-artifact@v1
      with:
        name: |
          libspreads_native.dylib
          libspreads_native.so
          spreads_native.dll
        failOnError: false

    - name: Restore Spreads.Native
      run: dotnet restore src/Spreads.Native/Spreads.Native.csproj

    - name: Restore Spreads.Unsafe
      run: dotnet restore src/Spreads.Unsafe/Spreads.Unsafe.csproj
      
    - name: Build Spreads.Native
      run: dotnet build src/Spreads.Native/Spreads.Native.csproj -c Release

    - name: Build Spreads.Unsafe
      run: msbuild src/Spreads.Unsafe/Spreads.Unsafe.csproj /p:Configuration=Release
      
    - name: Restore Spreads.Native.Tests project
      run: dotnet restore tests/Spreads.Native.Tests/Spreads.Native.Tests.csproj

    - name: Restore Spreads.Unsafe.Tests project
      run: dotnet restore tests/Spreads.Unsafe.Tests/Spreads.Unsafe.Tests.csproj
      
    - name: Build Spreads.Native.Tests project
      run:  dotnet build tests/Spreads.Native.Tests/Spreads.Native.Tests.csproj -c Release

    - name: Build Spreads.Unsafe.Tests project
      run: msbuild tests/Spreads.Unsafe.Tests/Spreads.Unsafe.Tests.csproj /p:Configuration=Release
      
    - name: Run Spreads.Native.Tests
      run: dotnet test tests/Spreads.Native.Tests/Spreads.Native.Tests.csproj -c Release --verbosity normal

    - name: Run Spreads.Unsafe.Tests
      run: dotnet test tests/Spreads.Unsafe.Tests/Spreads.Unsafe.Tests.csproj --no-build --no-restore  -c Release --verbosity normal

    - name: Pack Spreads.Native NuGet
      run: dotnet pack src\Spreads.Native\Spreads.Native.csproj --no-restore --no-build -c Release -o artifacts  -p:BuildSuffix=False

    - name: Pack Spreads.Unsafe NuGet
      run: dotnet pack src\Spreads.Unsafe\Spreads.Unsafe.csproj --no-restore --no-build -c Release -o artifacts  -p:BuildSuffix=False

    - name: Upload NuGet artifact
      uses: actions/upload-artifact@v2
      with:
        name: NuGet
        path: dotnet/artifacts/*.nupkg

    - name: Publish NuGet
      env:
        NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
      if: github.event_name == 'release'
      run: dotnet nuget push artifacts/**/*.nupkg --source https://api.nuget.org/v3/index.json --skip-duplicate --no-symbols true --api-key "$env:NUGET_API_KEY"

